{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","components/ModalImage/ModalImage.js","service/api.js","components/App.js","index.js"],"names":["Searchbar","state","inputValue","onInputValue","e","target","name","value","setState","onSubmitSearchForm","preventDefault","props","onSubmitForm","this","className","id","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","alt","largeImageURL","onImageClick","src","data-largeimageurl","data-id","onClick","url","dataset","largeimageurl","ImageGallery","images","map","image","tags","Button","text","buttonAction","App","color","height","width","timeout","Modal","pressEscBtn","console","log","code","onCloseModal","window","addEventListener","removeEventListener","children","ModalImage","largeImage","protoType","PropTypes","exact","string","isRequired","fetchImageWithKeyword","keyword","page","axios","get","then","response","data","loading","error","lastPage","query","saveLargeImage","hideLargeImage","isLastPage","length","totalHits","fetchImage","imageApi","prevState","hits","catch","finally","prevProps","scrollDown","scrollTo","top","document","documentElement","scrollHeight","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4f96e72d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Searchbar extends Component {\n  state = {\n    inputValue: '',\n  };\n\n  onInputValue = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmitSearchForm = e => {\n    e.preventDefault();\n    const { inputValue } = this.state;\n    this.props.onSubmitForm(inputValue);\n    this.setState({ inputValue: '' });\n  };\n\n  render() {\n    const { inputValue } = this.state;\n    return (\n      <header className=\"Searchbar\">\n        <form\n          id=\"form\"\n          onSubmit={this.onSubmitSearchForm}\n          className=\"SearchForm\"\n        >\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            name=\"inputValue\"\n            value={inputValue}\n            id=\"input\"\n            onChange={this.onInputValue}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\n\nfunction ImageGalleryItem({\n  webformatURL,\n  alt,\n  largeImageURL,\n  id,\n  onImageClick,\n}) {\n  const getlargeImageURL = e => {\n    onImageClick({ url: e.target.dataset.largeimageurl, alt: e.target.alt });\n  };\n  return (\n    <img\n      src={webformatURL}\n      alt={alt}\n      className=\"ImageGalleryItem-image\"\n      data-largeimageurl={largeImageURL}\n      data-id={id}\n      onClick={getlargeImageURL}\n    />\n  );\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string,\n  alt: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\n\nfunction ImageGallery({ images, onImageClick }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(image => (\n        <li\n          key={image.id}\n          className=\"ImageGalleryItem\"\n          // onClick={showModalOnClick}\n        >\n          <ImageGalleryItem\n            webformatURL={image.webformatURL}\n            alt={image.tags}\n            largeImageURL={image.largeImageURL}\n            id={image.id}\n            onImageClick={onImageClick}\n            // showModalOnClick={showModalOnClick}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Button({ text, buttonAction }) {\n  return (\n    <div className=\"buttonContainer\">\n      <button type=\"button\" onClick={buttonAction} className=\"Button\">\n        {text}\n      </button>\n    </div>\n  );\n}\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  buttonAction: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { Component } from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default class App extends Component {\n  //other logic\n  render() {\n    return (\n      <div className=\"loaderContainer\">\n        <Loader\n          type=\"Puff\"\n          color=\"#0F7A8F\"\n          height={50}\n          width={50}\n          timeout={3000} //3 secs\n        />\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.pressEscBtn);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.pressEscBtn);\n    this.props.onCloseModal();\n  }\n\n  pressEscBtn = e => {\n    console.log(e);\n    if (e.code === 'Escape') {\n      this.props.onCloseModal();\n    }\n  };\n\n  render() {\n    const { onCloseModal, children } = this.props;\n\n    return (\n      <div className=\"Overlay\" onClick={onCloseModal}>\n        <div className=\"Modal\">{children}</div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ModalImage({ largeImage }) {\n  const { alt, url } = largeImage;\n  return <img src={url} alt={alt} />;\n}\n\nModalImage.protoType = {\n  largeImage: PropTypes.exact({\n    alt: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ModalImage;\n","import axios from 'axios';\nconst apiKey = '17822127-e9a9a0a140ac0dca1ff979a25';\n\nconst fetchImageWithKeyword = (keyword, page) => {\n  return axios\n    .get(\n      `https://pixabay.com/api/?key=${apiKey}&q=${keyword}&image_type=photo&page=${page}&per_page=12`,\n    )\n    .then(response => {\n      // console.log(response);\n      console.log(response.data);\n      return response.data;\n    });\n};\n\nexport default fetchImageWithKeyword;\n","import { Component } from 'react';\nimport Searchbar from './Searchbar/Searchbar';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Button from './Button/Button';\nimport Loader from './Loader/Loader';\nimport Modal from './Modal/Modal';\nimport ModalImage from './ModalImage/ModalImage';\nimport imageApi from '../service/api';\nclass App extends Component {\n  state = {\n    images: [],\n    largeImageURL: null,\n    loading: false,\n    error: null,\n    keyword: '',\n    page: 1,\n    lastPage: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.keyword !== this.state.keyword) {\n      this.fetchImage();\n    }\n    if (this.state.page > 2 && prevState.page !== this.state.page) {\n      this.scrollDown();\n    }\n  }\n\n  onSubmitForm = query => {\n    this.setState({\n      keyword: query,\n      page: 1,\n      images: [],\n      lastPage: false,\n    });\n  };\n\n  saveLargeImage = largeImageURL => {\n    this.setState({ largeImageURL: largeImageURL });\n  };\n\n  hideLargeImage = () => {\n    this.setState({ largeImageURL: null });\n  };\n\n  isLastPage = data => {\n    console.log(this.state.images.length);\n    console.log(data.totalHits);\n    if (this.state.images.length === data.totalHits) {\n      this.setState({ lastPage: true });\n    }\n  };\n\n  scrollDown() {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  fetchImage = () => {\n    const { keyword, page } = this.state;\n    this.setState({ loading: true });\n    imageApi(keyword, page)\n      .then(data => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...data.hits],\n          page: prevState.page + 1,\n        }));\n\n        this.isLastPage(data);\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  render() {\n    const { images, loading, error, largeImageURL, lastPage } = this.state;\n    return (\n      <>\n        <Searchbar onSubmitForm={this.onSubmitForm} />\n        {images.length > 0 && (\n          <ImageGallery images={images} onImageClick={this.saveLargeImage} />\n        )}\n        {largeImageURL && (\n          <Modal onCloseModal={this.hideLargeImage}>\n            <ModalImage largeImage={largeImageURL} />\n          </Modal>\n        )}\n        {images.length > 0 && !lastPage && !loading && (\n          <Button text=\"Load more\" buttonAction={this.fetchImage} />\n        )}\n        {loading && <Loader />}\n        {error && <p>ERROR</p>}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './components/style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}