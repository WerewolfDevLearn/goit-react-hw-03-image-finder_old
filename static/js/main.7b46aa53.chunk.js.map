{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","components/ModalImage/ModalImage.js","service/api.js","components/App.js","index.js"],"names":["Searchbar","state","inputValue","onInputValue","e","target","name","value","setState","onSubmitSearchForm","preventDefault","props","onSubmitForm","this","className","id","uuid","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","alt","largeImageURL","onImageClick","src","data-largeimageurl","data-id","onClick","url","dataset","largeimageurl","ImageGallery","images","showModalOnClick","map","image","tags","Button","text","buttonAction","App","color","height","width","timeout","Modal","pressEscBtn","console","log","code","onCloseModal","window","addEventListener","removeEventListener","children","ModalImage","largeImage","protoType","PropTypes","exact","string","isRequired","fetchImageWithKeyword","keyword","page","axios","get","then","response","data","loading","error","query","saveLargeImage","hideLargeImage","showLargeImg","fetchImage","imageApi","prevState","hits","catch","finally","prevProps","scrollDown","scrollTo","top","document","documentElement","scrollHeight","behavior","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7b46aa53.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuid } from 'uuid';\n\nclass Searchbar extends Component {\n  state = {\n    inputValue: '',\n  };\n\n  onInputValue = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  onSubmitSearchForm = e => {\n    e.preventDefault();\n    const { inputValue } = this.state;\n    this.props.onSubmitForm(inputValue);\n    this.setState({ inputValue: '' });\n  };\n\n  render() {\n    const { inputValue } = this.state;\n    return (\n      <>\n        <header className=\"Searchbar\">\n          <form\n            id={uuid()}\n            onSubmit={this.onSubmitSearchForm}\n            className=\"SearchForm\"\n          >\n            <button type=\"submit\" className=\"SearchForm-button\">\n              <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n            <input\n              className=\"SearchForm-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search images and photos\"\n              name=\"inputValue\"\n              value={inputValue}\n              id={uuid()}\n              onChange={this.onInputValue}\n            />\n          </form>\n        </header>\n      </>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\n\nfunction ImageGalleryItem({\n  webformatURL,\n  alt,\n  largeImageURL,\n  id,\n  onImageClick,\n}) {\n  const getlargeImageURL = e => {\n    onImageClick({ url: e.target.dataset.largeimageurl, alt: e.target.alt });\n  };\n  return (\n    <>\n      <img\n        src={webformatURL}\n        alt={alt}\n        className=\"ImageGalleryItem-image\"\n        data-largeimageurl={largeImageURL}\n        data-id={id}\n        onClick={getlargeImageURL}\n      />\n    </>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string,\n  alt: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\n\nfunction ImageGallery({ images, onImageClick, showModalOnClick }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map(image => (\n        <li\n          key={image.id}\n          className=\"ImageGalleryItem\"\n          onClick={showModalOnClick}\n        >\n          <ImageGalleryItem\n            webformatURL={image.webformatURL}\n            alt={image.tags}\n            largeImageURL={image.largeImageURL}\n            id={image.id}\n            onImageClick={onImageClick}\n            // showModalOnClick={showModalOnClick}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }),\n  ),\n  onImageClick: PropTypes.func.isRequired,\n  showModalOnClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Button({ text, buttonAction }) {\n  return (\n    <div className=\"buttonContainer\">\n      <button type=\"button\" onClick={buttonAction} className=\"Button\">\n        {text}\n      </button>\n    </div>\n  );\n}\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  buttonAction: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { Component } from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default class App extends Component {\n  //other logic\n  render() {\n    return (\n      <div className=\"loaderContainer\">\n        <Loader\n          type=\"Puff\"\n          color=\"#0F7A8F\"\n          height={50}\n          width={50}\n          timeout={3000} //3 secs\n        />\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.pressEscBtn);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.pressEscBtn);\n    this.props.onCloseModal();\n  }\n\n  pressEscBtn = e => {\n    console.log(e);\n    if (e.code === 'Escape') {\n      this.props.onCloseModal();\n    }\n  };\n\n  render() {\n    const { onCloseModal, children } = this.props;\n\n    return (\n      <div className=\"Overlay\" onClick={onCloseModal}>\n        <div className=\"Modal\">{children}</div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ModalImage({ largeImage }) {\n  const { alt, url } = largeImage;\n  return (\n    <>\n      <img src={url} alt={alt} />\n    </>\n  );\n}\n\nModalImage.protoType = {\n  largeImage: PropTypes.exact({\n    alt: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ModalImage;\n","import axios from 'axios';\nconst apiKey = '17822127-e9a9a0a140ac0dca1ff979a25';\n\nconst fetchImageWithKeyword = (keyword, page) => {\n  return axios\n    .get(\n      `https://pixabay.com/api/?key=${apiKey}&q=${keyword}&image_type=photo&page=${page}&per_page=12`,\n    )\n    .then(response => response.data);\n};\n\nexport default fetchImageWithKeyword;\n","import { Component } from 'react';\nimport Searchbar from './Searchbar/Searchbar';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Button from './Button/Button';\nimport Loader from './Loader/Loader';\nimport Modal from './Modal/Modal';\nimport ModalImage from './ModalImage/ModalImage';\nimport imageApi from '../service/api';\nclass App extends Component {\n  state = {\n    images: [],\n    largeImageURL: null,\n    loading: false,\n    error: null,\n    keyword: '',\n    page: 1,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.keyword !== this.state.keyword) {\n      this.fetchImage();\n    }\n    if (this.state.page > 2 && prevState.page !== this.state.page) {\n      this.scrollDown();\n    }\n  }\n\n  onSubmitForm = query => {\n    this.setState({\n      keyword: query,\n      page: 1,\n      images: [],\n    });\n  };\n\n  saveLargeImage = largeImageURL => {\n    this.setState({ largeImageURL: largeImageURL });\n  };\n\n  hideLargeImage = () => {\n    this.setState({ largeImageURL: null });\n  };\n\n  showLargeImg = () => {\n    const largeImage = this.state.largeImageURL;\n\n    return largeImage;\n  };\n\n  scrollDown() {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  fetchImage = () => {\n    const { keyword, page } = this.state;\n    this.setState({ loading: true });\n    imageApi\n      .fetchImageWithKeyword(keyword, page)\n      .then(data =>\n        this.setState(prevState => ({\n          images: [...prevState.images, ...data.hits],\n          page: prevState.page + 1,\n        })),\n      )\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  render() {\n    const { images, loading, error, largeImageURL } = this.state;\n    return (\n      <>\n        <Searchbar onSubmitForm={this.onSubmitForm} />\n        {images.length > 0 && (\n          <ImageGallery images={images} onImageClick={this.saveLargeImage} />\n        )}\n        {largeImageURL && (\n          <Modal onCloseModal={this.hideLargeImage}>\n            <ModalImage largeImage={this.showLargeImg()} />\n          </Modal>\n        )}\n        {images.length > 0 && (\n          <Button text=\"Load more\" buttonAction={this.fetchImage} />\n        )}\n        {loading && <Loader />}\n        {error && <p>ERROR</p>}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './components/style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}